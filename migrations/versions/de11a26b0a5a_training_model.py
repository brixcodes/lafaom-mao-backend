"""Training model

Revision ID: de11a26b0a5a
Revises: cb2efc7b239d
Create Date: 2025-09-19 09:58:00.673600

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel



# revision identifiers, used by Alembic.
revision: str = 'de11a26b0a5a'
down_revision: Union[str, None] = 'cb2efc7b239d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('organization_centers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('delete_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('address', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('city', sqlmodel.sql.sqltypes.AutoString(length=120), nullable=False),
    sa.Column('postal_code', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('country_code', sqlmodel.sql.sqltypes.AutoString(length=4), nullable=False),
    sa.Column('telephone_number', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('mobile_number', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('website', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_organization_centers_name'), 'organization_centers', ['name'], unique=True)
    op.create_table('reclamation_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('delete_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('specialty',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('delete_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reclamations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('delete_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('admin_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('reclamation_number', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('application_number', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('subject', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('reclamation_type', sa.Integer(), nullable=False),
    sa.Column('priority', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=False),
    sa.Column('status', sa.Enum('NEW', 'IN_PROGRESS', 'CLOSED', name='reclamationstatusenum'), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('closure_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['admin_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['reclamation_type'], ['reclamation_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_reclamations_application_number'), 'reclamations', ['application_number'], unique=False)
    op.create_index(op.f('ix_reclamations_reclamation_number'), 'reclamations', ['reclamation_number'], unique=True)
    op.create_table('trainings',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('delete_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('duration', sa.Integer(), nullable=False),
    sa.Column('duration_unit', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('specialty_id', sa.Integer(), nullable=False),
    sa.Column('info_sheet', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('training_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('presentation', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('benefits', sa.JSON(), nullable=True),
    sa.Column('strengths', sa.JSON(), nullable=True),
    sa.Column('target_skills', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('program', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('target_audience', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('prerequisites', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('enrollment', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['specialty_id'], ['specialty.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('training_sessions',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('delete_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('training_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('center_id', sa.Integer(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('registration_deadline', sa.Date(), nullable=False),
    sa.Column('available_slots', sa.Integer(), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('registration_fee', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('training_fee', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('currency', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('required_attachments', sa.JSON(), nullable=True),
    sa.Column('installment_percentage', sa.JSON(), nullable=True),
    sa.Column('moodle_course_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['center_id'], ['organization_centers.id'], ),
    sa.ForeignKeyConstraint(['training_id'], ['trainings.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('student_applications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('delete_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('training_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('target_session_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('application_number', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('refusal_reason', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('registration_fee', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('training_fee', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('currency', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('installment_percentage', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['target_session_id'], ['training_sessions.id'], ),
    sa.ForeignKeyConstraint(['training_id'], ['trainings.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_student_applications_application_number'), 'student_applications', ['application_number'], unique=True)
    op.create_table('training_session_participants',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('delete_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('session_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('joined_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['training_sessions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('student_attachments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('delete_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('application_id', sa.Integer(), nullable=False),
    sa.Column('document_type', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('file_path', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('upload_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['application_id'], ['student_applications.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('users', sa.Column('moodle_user_id', sa.Integer(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'moodle_user_id')
    op.drop_table('student_attachments')
    op.drop_table('training_session_participants')
    op.drop_index(op.f('ix_student_applications_application_number'), table_name='student_applications')
    op.drop_table('student_applications')
    op.drop_table('training_sessions')
    op.drop_table('trainings')
    op.drop_index(op.f('ix_reclamations_reclamation_number'), table_name='reclamations')
    op.drop_index(op.f('ix_reclamations_application_number'), table_name='reclamations')
    op.drop_table('reclamations')
    op.drop_table('specialty')
    op.drop_table('reclamation_types')
    op.drop_index(op.f('ix_organization_centers_name'), table_name='organization_centers')
    op.drop_table('organization_centers')
    # ### end Alembic commands ###
