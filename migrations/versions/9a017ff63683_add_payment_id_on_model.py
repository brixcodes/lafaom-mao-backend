"""add payment_id on model

Revision ID: 9a017ff63683
Revises: 24474a5668f8
Create Date: 2025-09-19 17:34:59.902204

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel

from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '9a017ff63683'
down_revision: Union[str, None] = '24474a5668f8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('job_applications', sa.Column('payment_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.create_foreign_key(None, 'job_applications', 'payments', ['payment_id'], ['id'])
    op.alter_column('reclamations', 'closure_date',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.TIMESTAMP(timezone=True),
               existing_nullable=True)
    op.add_column('student_applications', sa.Column('payment_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.create_foreign_key(None, 'student_applications', 'payments', ['payment_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'student_applications', type_='foreignkey')
    op.drop_column('student_applications', 'payment_id')
    op.alter_column('reclamations', 'closure_date',
               existing_type=sa.TIMESTAMP(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.drop_constraint(None, 'job_applications', type_='foreignkey')
    op.drop_column('job_applications', 'payment_id')
    # ### end Alembic commands ###
